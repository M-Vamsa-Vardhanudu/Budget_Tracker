{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vamsi\\\\Downloads\\\\budget-tracker\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, createContext, useContext } from 'react';\n\n// Create context for global state management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the context\nexport const useAppContext = () => {\n  _s();\n  return useContext(AppContext);\n};\n\n// App Provider for context\n_s(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AppProvider({\n  children,\n  setIsAuthenticated\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [categories, setCategories] = useState(['Food', 'Transportation', 'Entertainment', 'Bills', 'Shopping']);\n  const [transactions, setTransactions] = useState([]);\n  const login = (username, password) => {\n    // Simulate authentication\n    if (username && password) {\n      setUser({\n        username\n      });\n      setIsAuthenticated(true);\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const addCategory = category => {\n    if (category && !categories.includes(category)) {\n      setCategories([...categories, category]);\n    }\n  };\n  const removeCategory = category => {\n    setCategories(categories.filter(c => c !== category));\n  };\n  const addTransaction = transaction => {\n    setTransactions([...transactions, {\n      ...transaction,\n      id: Date.now()\n    }]);\n  };\n  const deleteTransaction = id => {\n    setTransactions(transactions.filter(transaction => transaction.id !== id));\n  };\n  const fetchRandomData = () => {\n    const descriptions = ['Grocery shopping', 'Coffee', 'Movie tickets', 'Electric bill', 'Gas for car', 'Restaurant dinner', 'Online purchase', 'Phone bill', 'Bus ticket', 'New shoes', 'Gym membership', 'Haircut'];\n    const randomTransactions = Array(10).fill().map(() => {\n      const randCategory = categories[Math.floor(Math.random() * categories.length)];\n      const randAmount = Math.floor(Math.random() * 200) + 10;\n      const randDesc = descriptions[Math.floor(Math.random() * descriptions.length)];\n      const randDate = new Date(Date.now() - Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000);\n      return {\n        id: Date.now() + Math.random(),\n        amount: randAmount,\n        category: randCategory,\n        description: randDesc,\n        date: randDate.toISOString().split('T')[0]\n      };\n    });\n    setTransactions([...transactions, ...randomTransactions]);\n  };\n  const contextValue = {\n    user,\n    categories,\n    transactions,\n    login,\n    logout,\n    addCategory,\n    removeCategory,\n    addTransaction,\n    deleteTransaction,\n    fetchRandomData\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s2(AppProvider, \"6kL/1lNrT+xdR8S7rjDUJPUkxiQ=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","createContext","useContext","jsxDEV","_jsxDEV","AppContext","useAppContext","_s","AppProvider","children","setIsAuthenticated","_s2","user","setUser","categories","setCategories","transactions","setTransactions","login","username","password","logout","addCategory","category","includes","removeCategory","filter","c","addTransaction","transaction","id","Date","now","deleteTransaction","fetchRandomData","descriptions","randomTransactions","Array","fill","map","randCategory","Math","floor","random","length","randAmount","randDesc","randDate","amount","description","date","toISOString","split","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vamsi/Downloads/budget-tracker/src/context/AppContext.jsx"],"sourcesContent":["import React, { useState, createContext, useContext } from 'react';\n\n// Create context for global state management\nconst AppContext = createContext();\n\n// Custom hook to use the context\nexport const useAppContext = () => useContext(AppContext);\n\n// App Provider for context\nexport function AppProvider({ children, setIsAuthenticated }) {\n  const [user, setUser] = useState(null);\n  const [categories, setCategories] = useState([\n    'Food', 'Transportation', 'Entertainment', 'Bills', 'Shopping'\n  ]);\n  const [transactions, setTransactions] = useState([]);\n  \n  const login = (username, password) => {\n    // Simulate authentication\n    if (username && password) {\n      setUser({ username });\n      setIsAuthenticated(true);\n      return true;\n    }\n    return false;\n  };\n  \n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  \n  const addCategory = (category) => {\n    if (category && !categories.includes(category)) {\n      setCategories([...categories, category]);\n    }\n  };\n  \n  const removeCategory = (category) => {\n    setCategories(categories.filter(c => c !== category));\n  };\n  \n  const addTransaction = (transaction) => {\n    setTransactions([...transactions, { ...transaction, id: Date.now() }]);\n  };\n\n  const deleteTransaction = (id) => {\n    setTransactions(transactions.filter(transaction => transaction.id !== id));\n  };\n  \n  const fetchRandomData = () => {\n    const descriptions = [\n      'Grocery shopping', 'Coffee', 'Movie tickets', 'Electric bill', \n      'Gas for car', 'Restaurant dinner', 'Online purchase', 'Phone bill',\n      'Bus ticket', 'New shoes', 'Gym membership', 'Haircut'\n    ];\n    \n    const randomTransactions = Array(10).fill().map(() => {\n      const randCategory = categories[Math.floor(Math.random() * categories.length)];\n      const randAmount = Math.floor(Math.random() * 200) + 10;\n      const randDesc = descriptions[Math.floor(Math.random() * descriptions.length)];\n      const randDate = new Date(Date.now() - Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000);\n      \n      return {\n        id: Date.now() + Math.random(),\n        amount: randAmount,\n        category: randCategory,\n        description: randDesc,\n        date: randDate.toISOString().split('T')[0]\n      };\n    });\n    \n    setTransactions([...transactions, ...randomTransactions]);\n  };\n  \n  const contextValue = {\n    user,\n    categories,\n    transactions,\n    login,\n    logout,\n    addCategory,\n    removeCategory,\n    addTransaction,\n    deleteTransaction,\n    fetchRandomData\n  };\n  \n  return (\n    <AppContext.Provider value={contextValue}>\n      {children}\n    </AppContext.Provider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}